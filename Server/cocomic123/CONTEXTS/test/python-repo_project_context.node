"bullet"
"player"
"config"
"enemy"
"game"
"bullet.Bullet"
"class Bullet:\n\n"
"bullet.Bullet.__init__"
"def __init__(self, x, y):\n        self.x, self.y = x, y\n        self.size = CONFIG[\"bullet_size\"]\n        self.image = pygame.Surface(self.size).fill((255, 255, 0))\n        self.speed = CONFIG[\"bullet_speed\"]"
"bullet.Bullet.move"
"def move(self): self.y -= self.speed"
"bullet.Bullet.draw"
"def draw(self, screen): screen.blit(self.image, (self.x, self.y))"
"bullet.Bullet.is_off_screen"
"def is_off_screen(self): return self.y < 0"
"player.Player"
"class Player:\n\n"
"player.Player.__init__"
"def __init__(self, x, y):\n        self.x, self.y = x, y\n        self.size = CONFIG[\"player_size\"]\n        self.image = pygame.Surface(self.size).fill((0, 255, 0))\n        self.speed = CONFIG[\"player_speed\"]\n        self.enemy = Enemy(375, 50)  # Depend on Enemy class for interaction\n        self.bullets = []"
"player.Player.move"
"def move(self, keys):\n        if keys[pygame.K_LEFT]: self.x -= self.speed\n        if keys[pygame.K_RIGHT]: self.x += self.speed\n        if keys[pygame.K_UP]: self.y -= self.speed\n        if keys[pygame.K_DOWN]: self.y += self.speed"
"player.Player.shoot"
"def shoot(self):\n        self.bullets.append(Bullet(self.x + 22, self.y))"
"player.Player.draw"
"def draw(self, screen):\n        screen.blit(self.image, (self.x, self.y))\n        for bullet in self.bullets:\n            bullet.move()\n            bullet.draw(screen)"
"config.CONFIG"
"CONFIG={\n    \"screen_width\": 800,\n    \"screen_height\": 600,\n    \"fps\": 60,\n    \"player_speed\": 5,\n    \"enemy_speed\": 3,\n    \"bullet_speed\": 7,\n    \"player_size\": (50, 50),\n    \"enemy_size\": (50, 50),\n    \"bullet_size\": (5, 10)\n}"
"enemy.Enemy"
"class Enemy:\n\n"
"enemy.Enemy.__init__"
"def __init__(self, x, y):\n        self.x, self.y = x, y\n        self.size = CONFIG[\"enemy_size\"]\n        self.image = pygame.Surface(self.size).fill((255, 0, 0))\n        self.speed = CONFIG[\"enemy_speed\"]"
"enemy.Enemy.move"
"def move(self): self.y += self.speed"
"enemy.Enemy.draw"
"enemy.Enemy.interact_with_bullet"
"def interact_with_bullet(self, bullets):\n        for bullet in bullets:\n            if self.x < bullet.x < self.x + self.size[0] and self.y < bullet.y < self.y + self.size[1]:\n                bullets.remove(bullet)\n                return True  # Bullet hit the enemy\n        return False"
"enemy.Enemy.check_collision_with_bullet"
"def check_collision_with_bullet(self, bullets):\n        return False"
"game.game_loop"
"def game_loop():\n    pygame.init()\n    screen = pygame.display.set_mode((CONFIG[\"screen_width\"], CONFIG[\"screen_height\"]))\n    clock = pygame.time.Clock()\n    player = Player(375, 500)\n    enemy = Enemy(375, 50)\n\n    running = True\n    while running:\n        screen.fill((0, 0, 0))\n        keys = pygame.key.get_pressed()\n\n        for event in pygame.event.get():\n            if event.type == pygame.QUIT: running = False\n            if event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:\n                player.shoot()\n\n        player.move(keys)\n        enemy.move()\n        player.draw(screen)\n        enemy.draw(screen)\n\n        if enemy.interact_with_bullet(player.bullets):  # Enemy interacts with player bullets\n            print(\"Enemy hit by bullet!\")\n\n        pygame.display.flip()\n        clock.tick(CONFIG[\"fps\"])\n\n    pygame.quit()"
"bullet.CONFIG"
"player.CONFIG"
"player.Enemy"
"player.Bullet"
"enemy.CONFIG"
"enemy.Bullet"
"game.CONFIG"
"game.Player"
"game.Enemy"
"game.Bullet"